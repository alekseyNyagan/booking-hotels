spring:
  data:
    mongodb:
      host: ${MONGO_HOST:mongodb}
      port: ${MONGO_PORT:27017}
      database: ${MONGO_DATABASE:statistic}
      username: ${MONGO_USERNAME:admin}
      password: ${MONGO_PASSWORD:password}
      authentication-database: ${MONGO_AUTH_DATABASE:admin}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${KEYCLOAK_HOST:keycloak}:${KEYCLOAK_PORT:8080}/realms/booking-hotels-realm
          jwk-set-uri: http://${KEYCLOAK_HOST:keycloak}:${KEYCLOAK_PORT:8080}/realms/booking-hotels-realm/protocol/openid-connect/certs
  cloud:
    function:
      definition: consumer
    stream:
      kafka:
        binder:
          brokers: ${KAFKA_BROKERS:kafka}:${KAFKA_PORT:9092}
          enableObservation: true
      bindings:
        consumer-in-0:
          destination: statistic

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8070}/eureka/

server:
  port: ${SERVER_PORT:8181}

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

management:
  observations:
    http:
      server:
        requests:
          write-trace-header: true
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://${ZIPKIN_HOST:zipkin}:${ZIPKIN_PORT:9411}/api/v2/spans
  endpoints:
    web:
      exposure:
        include: "*"
    enabled-by-default: true