keycloak:
  server-url: http://${KEYCLOAK_HOST:keycloak}:${KEYCLOAK_PORT:8080}
  realm: ${KEYCLOAK_REALM:booking-hotels-realm}
  username: ${KEYCLOAK_USERNAME:admin}
  password: ${KEYCLOAK_PASSWORD:adminpass}
  auth-server-url: http://${KEYCLOAK_HOST:keycloak}:${KEYCLOAK_PORT:8080}/auth
  ssl-required: external
  resource: ${KEYCLOAK_RESOURCE:booking-hotels}
  credentials:
    secret: ${KEYCLOAK_SECRET:4aQS25UnlMEmQbpsIdR1GKzWl60BH4Bs}
  use-resource-role-mappings: true
  bearer-only: true

server:
  port: ${SERVER_PORT:8073}

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${EUREKA_HOST:eureka-server}:${EUREKA_PORT:8070}/eureka/

spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://${KEYCLOAK_HOST:keycloak}:${KEYCLOAK_PORT:8080}/realms/${KEYCLOAK_REALM:booking-hotels-realm}
          jwk-set-uri: http://${KEYCLOAK_HOST:keycloak}:${KEYCLOAK_PORT:8080}/realms/${KEYCLOAK_REALM:booking-hotels-realm}/protocol/openid-connect/certs

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

management:
  observations:
    http:
      server:
        requests:
          write-trace-header: true
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: http://${ZIPKIN_HOST:zipkin}:${ZIPKIN_PORT:9411}/api/v2/spans
  endpoints:
    web:
      exposure:
        include: "*"
    enabled-by-default: true