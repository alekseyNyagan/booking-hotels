services:
  booking-hotels-service:
    build:
      context: ../booking-hotels-service
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8071
      - SERVER_PORT=8180
      - EUREKA_HOST=eureka-server
      - EUREKA_PORT=8070
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - KEYCLOAK_HOST=keycloak
      - KEYCLOAK_PORT=8080
      - ZIPKIN_HOST=zipkin
      - ZIPKIN_PORT=9411
      - KAFKA_BROKERS=kafka
      - KAFKA_PORT=9092
    depends_on:
      postgres:
        condition: service_started
      kafka:
        condition: service_started
      logstash:
        condition: service_started
      config-server:
        condition: service_healthy
    ports:
      - "8180:8180"

  user-service:
    build:
      context: ../user-service
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8071
      - EUREKA_HOST=eureka-server
      - EUREKA_PORT=8070
      - SERVER_PORT=8073
      - ZIPKIN_HOST=zipkin
      - ZIPKIN_PORT=9411
      - KEYCLOAK_HOST=keycloak
      - KEYCLOAK_PORT=8080
      - KEYCLOAK_REALM=booking-hotels-realm
      - KEYCLOAK_USERNAME=admin
      - KEYCLOAK_PASSWORD=adminpass
      - KEYCLOAK_RESOURCE=booking-hotels
      - KEYCLOAK_SECRET=4aQS25UnlMEmQbpsIdR1GKzWl60BH4Bs
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_started
      gateway-server:
        condition: service_started
      logstash:
        condition: service_started
    ports:
      - "8073:8073"

  statistic-service:
    build:
      context: ../statistic-service
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8071
      - EUREKA_HOST=eureka-server
      - EUREKA_PORT=8070
      - SERVER_PORT=8181
      - ZIPKIN_HOST=zipkin
      - ZIPKIN_PORT=9411
      - KEYCLOAK_HOST=keycloak
      - KEYCLOAK_PORT=8080
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - MONGO_DATABASE=statistic
      - MONGO_USERNAME=admin
      - MONGO_PASSWORD=password
      - MONGO_AUTH_DATABASE=admin
      - KAFKA_BROKERS=kafka
      - KAFKA_PORT=9092
    depends_on:
      mongodb:
        condition: service_started
      kafka:
        condition: service_started
      logstash:
        condition: service_started
      config-server:
        condition: service_healthy
    ports:
      - "8181:8181"

  config-server:
    build:
      context: ../config-server
    container_name: config-server
    ports:
      - "8071:8071"
    environment:
      - SPRING_PROFILES_ACTIVE=native
      - ENCRYPT_KEY=IMSYMMETRIC
      - SERVER_PORT=8071
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8071/actuator/health || exit 1
      interval: 30s
      timeout: 5s
      start_period: 30s
      retries: 5

  eureka-server:
    build:
      context: ../eureka-server
    ports:
      - "8070:8070"
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8071
      - SERVER_PORT=8070
    depends_on:
      config-server:
        condition: service_healthy

  gateway-server:
    build: ../gateway-server
    ports:
      - "8072:8072"
    environment:
      - SPRING_PROFILES_ACTIVE=default
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8071
      - SERVER_PORT=8072
      - KEYCLOAK_HOST=keycloak
      - KEYCLOAK_PORT=8080
      - KEYCLOAK_CLIENT_ID=booking-hotels
      - KEYCLOAK_CLIENT_SECRET=4aQS25UnlMEmQbpsIdR1GKzWl60BH4Bs
      - ZIPKIN_HOST=zipkin
      - ZIPKIN_PORT=9411
      - EUREKA_HOST=eureka-server
      - EUREKA_PORT=8070
    depends_on:
      config-server:
        condition: service_healthy
      logstash:
        condition: service_started

  postgres:
    image: postgres:16.3
    container_name: postgres
    environment:
      POSTGRES_DB: booking_hotels
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"

  keycloak:
    image: keycloak/keycloak
    container_name: keycloak
    command: start-dev --import-realm
    ports:
      - "8080:8080"
    environment:
      KC_DB: postgres
      KC_DB_SCHEMA: public
      KC_DB_URL_HOST: keycloak-postgres
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloakdb
      KC_DB_USERNAME: keycloakuser
      KC_DB_PASSWORD: keycloakpass
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: adminpass
    depends_on:
      - keycloak-postgres
    volumes:
      - ./realm-export.json:/opt/keycloak/data/import/realm-export.json

  keycloak-postgres:
    image: postgres:16.3
    volumes:
      - postgres_data:/var/lib/postgresql/data
    container_name: keycloak-postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: keycloakdb
      POSTGRES_USER: keycloakuser
      POSTGRES_PASSWORD: keycloakpass

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "statistic:1:1"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    depends_on:
      - zookeeper

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_data:/data/db

  elasticsearch:
    image: elasticsearch:8.15.0
    container_name: elasticsearch
    environment:
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
      - discovery.type=single-node
      - cluster.routing.allocation.disk.watermark.low=600mb
      - cluster.routing.allocation.disk.watermark.high=500mb
      - cluster.routing.allocation.disk.watermark.flood_stage=400mb
    volumes:
      - esdata1:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    image: kibana:8.15.0
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9300
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"

  logstash:
    image: logstash:8.15.0
    container_name: logstash
    command: logstash -f /etc/logstash/conf.d/logstash.conf
    volumes:
      - ./config:/etc/logstash/conf.d
    depends_on:
      - elasticsearch
    ports:
      - "5000:5000"

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    environment:
      - STORAGE_TYPE=elasticsearch
      - "ES_HOSTS=elasticsearch:9300"
    depends_on:
      - elasticsearch

  prometheus:
    image: prom/prometheus:latest
    restart: "no"
    command:
      - "--web.enable-lifecycle"
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    restart: "no"
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: true

volumes:
  postgres_data:
    driver: local
  mongodb_data:
  esdata1:
    driver: local
  prometheus_data: